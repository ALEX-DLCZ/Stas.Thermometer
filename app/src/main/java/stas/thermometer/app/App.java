/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package stas.thermometer.app;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import stas.thermometer.domains.ThermometerRepositoryInterface;
import stas.thermometer.infrastructures.ThermometerRepository;
import stas.thermometer.presentations.MainPresenter;
import stas.thermometer.views.MainView;

// Dépendances propres
import java.util.concurrent.*;

public class App {

    /**
     *
     * --NOTE--
     *
     * prévoir une évolution de maintenabilité du code
     * ex : pression atmosphérique, rayonnement thermique, vitesse du vent, Conductivité thermique.
     * (créer un probe "ProbeNom", créer un message "MsgNom" + imp MsgAlert, implémenter dans MeasurementType et c'est tout ... normalement)
     *
     *
     *
     */


    private static final Logger LOG = LogManager.getLogger("stas");

    public static void main(String[] args) {

        ArgsAnalyzer argsAnalyzer = new ArgsAnalyzer(args);
        ThermometerRepositoryInterface thermometerRepository = new ThermometerRepository(argsAnalyzer.getConfiguration());
        MainView mainView = new MainView();
        MainPresenter mainPresenter = new MainPresenter(mainView, thermometerRepository);
        mainPresenter.Start();






        //TODO: faire collaborer la sonde avec la tâche de rafraichissement ...thermometerPresenter en paramètre ?
        var task = new RefreshProbeTask(mainPresenter);
        //Configure un exécuteur planifié pour un seul thread
        var scheduledExecutor = Executors.newSingleThreadScheduledExecutor();
        //Exécute la tache tout de suite et la répète toutes les 2 secondes
        scheduledExecutor.scheduleAtFixedRate(task, 0, 100, TimeUnit.MILLISECONDS);

        //TODO: cette méthode est-elle placée au bon endroit ? (nop je crois pas)

        scheduledExecutor.shutdown();
    }

}

/**
 * Représente une boucle principale à demander un rafraichissement de la sonde.
 * */
class RefreshProbeTask implements Runnable {
    private MainPresenter mainPresenter;
    public final Logger log = LogManager.getLogger("stas");
    public RefreshProbeTask(MainPresenter mainPresenter){
        this.mainPresenter = mainPresenter;
    }
    @Override
    public void run() {
        //log.info("You should tell the probe to refresh");
        mainPresenter.onUpdate();

    }

}
